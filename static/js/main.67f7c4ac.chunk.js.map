{"version":3,"sources":["components/Map/Map.js","constants/Colors.js","components/SideBar/LayerList.js","datasets/layers.js","datasets/geoJSON.js","components/SideBar/SpatialOperations/minorComponents/OperationHeader.js","components/SideBar/SpatialOperations/minorComponents/LayerSelect.js","components/SideBar/SpatialOperations/minorComponents/OperationButton.js","components/SideBar/SpatialOperations/Buffer.js","components/SideBar/SpatialOperations/Difference.js","components/SideBar/SpatialOperations/Intersect.js","components/SideBar/SpatialOperations/Union.js","components/SideBar/OperationList.js","components/SideBar/SideBar.js","components/Mission/ModalContent.js","components/Mission/Mission.js","components/MainWrapper/MainWrapper.js","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","accessToken","Map","props","mapContainer","useRef","useState","map","setMap","allLayers","deletedLayerId","setDeletedLayerId","useEffect","current","newMap","container","style","center","zoom","attributionControl","on","console","log","forEach","layer","addLayer","getLayer","id","resize","nav","NavigationControl","addControl","attachMap","updateLayers","removeLayer","removeSource","lastLayer","index","undefined","setLayoutProperty","layout","visibility","setPaintProperty","type","paint","moveLayer","className","ref","getRandomColor","color","i","Math","floor","random","StyledContainer","styled","div","isDragging","draggingOver","Colors","LayerList","totalLayerSet","setTotalLayerSet","layersCopy","element","push","toggleAllVisibility","visible","Item","setVisibility","setColor","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","width","wordWrap","marginLeft","fontSize","name","value","onChange","evt","target","changeColor","onClick","toggleVisibility","class","borderLeft","backgroundColor","droppableId","droppableProps","key","placeholder","borderColor","createPolygonLayer","data","source","createLineLayer","createPointLayer","layer_gloshaugen","geometry","coordinates","properties","layer_hoyskoleparken","layer_campusrunden","layer_nidelva","objektType","nedborfeltVassdragNr","elvenavn","elvelengde","nivaa","vassdragsomrade","dataUttaksdato","eksportType","layer_kirker","layer_bunnpris","OperationHeader","operation","helpTip","margin","fontWeight","LayerSelect","chosenLayerId","setChosenLayerId","layers","event","OperationButton","borderRadius","operationHandler","Buffer","radius","setRadius","min","max","step","bufferedData","buffer","units","newID","createdLayer","findIndex","lyr","unshift","alert","performBuffer","find","Difference","polygonLayers","filter","chosenLayerId2","setChosenLayerId2","layer1","layer2","differenceData","difference","performDifference","convertToListOfPolygons","polygon","c","turf","Intersect","pieces1","pieces2","intersectedPolygons","length","j","intersect","IntersectedLayer","performIntersect","Union","unionData","unionPolygon","performUnion","OperationList","SideBar","setSideBarOpen","onDragEnd","result","destination","newList","slice","sourceIdx","parseInt","splice","destIdx","draggedLink","ModalContent","setShowMission","setAcceptedMission","acceptedMission","title","reply","setReply","toLowerCase","checkAnswer","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","height","boxShadow","Mission","showMission","isOpen","onRequestClose","MainWrapper","sideBarOpen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,gBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,gBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,iBAClB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,gBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,gBAAiB,kBAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,iBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,g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","file":"static/js/main.67f7c4ac.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./Map.css\";\r\n// import { gloshaugen } from \"../../datasets/geoJSON\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoibGFyc2lib3kiLCJhIjoiY2s2amd6MmVvMDRxeDNubW40bGwwenNpbCJ9.i9ENV59BhjJShYuUBgoj0g\";\r\n\r\nconst Map = (props) => {\r\n  const mapContainer = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  let { allLayers, deletedLayerId, setDeletedLayerId } = props;\r\n\r\n  useEffect(() => {\r\n    const attachMap = ({ setMap, mapContainer }) => {\r\n      if (!mapContainer.current) {\r\n        return;\r\n      }\r\n      const newMap = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: \"mapbox://styles/mapbox/dark-v10\",\r\n        center: [10.39, 63.425],\r\n        zoom: 13,\r\n        attributionControl: false,\r\n      });\r\n\r\n      newMap.on(\"load\", () => {\r\n        console.log(\"First: \", allLayers);\r\n\r\n        // Add layers to map after map has loaded\r\n        allLayers.forEach((layer) => {\r\n          newMap.addLayer(layer);\r\n          console.log(newMap.getLayer(layer.id).id);\r\n        });\r\n        setMap(newMap);\r\n        newMap.resize();\r\n      });\r\n\r\n      // Add zoom control\r\n      var nav = new mapboxgl.NavigationControl();\r\n      newMap.addControl(nav, \"bottom-right\");\r\n    };\r\n    !map && attachMap({ setMap, mapContainer });\r\n  }, [map, allLayers]);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    if (map) {\r\n      //map.setStyle(\"mapbox://styles/mapbox/\" + mapStyle);\r\n      // map.remove();\r\n      // setMap(null);\r\n      console.log(\"change layer\");\r\n    }\r\n  }, [map, mapStyle]);\r\n  */\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      console.log(map);\r\n      updateLayers();\r\n    }\r\n  }, [map, allLayers]);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      // Delete layer\r\n      if (deletedLayerId !== \"\") {\r\n        console.log(\"Delete layer\");\r\n        console.log(map.getLayer(deletedLayerId));\r\n        map.removeLayer(deletedLayerId);\r\n        map.removeSource(deletedLayerId);\r\n        setDeletedLayerId(\"\");\r\n        return;\r\n      }\r\n    }\r\n  }, [map, deletedLayerId, setDeletedLayerId]);\r\n\r\n  const updateLayers = () => {\r\n    console.log(\"Second: \", allLayers);\r\n    let lastLayer;\r\n    let index = 0;\r\n    // Removes the chosen layer\r\n\r\n    allLayers.forEach((layer) => {\r\n      // Adds layer to the map if not already included\r\n      if (map.getLayer(layer.id) === undefined) {\r\n        map.addLayer(layer);\r\n        console.log(\"Add layer\");\r\n      }\r\n      console.log(map.getLayer(layer.id).id);\r\n\r\n      // Updates visibility of each layer\r\n      map.setLayoutProperty(layer.id, \"visibility\", layer.layout.visibility);\r\n\r\n      map.setPaintProperty(layer.id, `${layer.type}-color`, layer.paint[`${layer.type}-color`]);\r\n\r\n      // Rearranges the layers\r\n      if (index === 0) {\r\n        lastLayer = layer;\r\n      } else {\r\n        map.moveLayer(layer.id, lastLayer.id);\r\n        lastLayer = layer;\r\n      }\r\n      index++;\r\n    });\r\n  };\r\n\r\n  return <div className=\"map\" ref={mapContainer} />;\r\n};\r\n\r\nexport default Map;\r\n","export default {\r\n  primary: \"#355f7a\",\r\n  secondary: \"#142850\",\r\n  button: \"#00909E\",\r\n  textMain: \"white\", //\"#1c0000\",\r\n  text: \"white\",\r\n\r\n  //button: \"#DAE1E7\",\r\n  delete: \"#ff5c5c\", // \"#8b0000\",\r\n};\r\n\r\n// Give the new layer a random color\r\nexport const getRandomColor = () => {\r\n  var letters = \"0123456789ABCDEF\";\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./SideBar.css\";\r\nimport styled from \"styled-components\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst LayerList = (props) => {\r\n  const { totalLayerSet, setTotalLayerSet } = props;\r\n\r\n  let layersCopy = [];\r\n  totalLayerSet.forEach((element) => {\r\n    layersCopy.push(element);\r\n  });\r\n\r\n  const toggleAllVisibility = (visible) => {\r\n    layersCopy.forEach((layer) => {\r\n      layer.layout.visibility = visible ? \"visible\" : \"none\";\r\n    });\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  const toggleVisibility = (layer) => {\r\n    if (layer.layout.visibility === \"none\") {\r\n      layer.layout.visibility = \"visible\";\r\n    } else {\r\n      layer.layout.visibility = \"none\";\r\n    }\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  const changeColor = (layer, color) => {\r\n    layer.paint[`${layer.type}-color`] = color;\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  const Item = ({ index, layer }) => {\r\n    const [visibility, setVisibility] = useState(layer.layout.visibility);\r\n    const [color, setColor] = useState(layer.paint[`${layer.type}-color`]);\r\n    return (\r\n      <Draggable draggableId={`${index}`} index={index}>\r\n        {(provided, snapshot) => (\r\n          <StyledContainer\r\n            className=\"Layer\"\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            draggingOver={snapshot.draggingOver === \"delete\"}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <div style={{ width: \"70%\", wordWrap: \"break-word\", marginLeft: 4, fontSize: \"15px\" }}>\r\n              {layer.id}\r\n            </div>\r\n            <div className=\"Row\">\r\n              <input\r\n                type=\"color\"\r\n                id=\"head\"\r\n                name=\"head\"\r\n                value={color}\r\n                onChange={(evt) => {\r\n                  setColor(evt.target.value);\r\n                  changeColor(layer, evt.target.value);\r\n                }}\r\n              />\r\n              <div\r\n                className=\"LayerButton\"\r\n                onClick={() => {\r\n                  setVisibility(visibility === \"visible\" ? \"none\" : \"visible\");\r\n                  toggleVisibility(layer);\r\n                }}\r\n              >\r\n                <i class=\"material-icons\">{visibility === \"visible\" ? \"visibility\" : \"visibility_off\"}</i>\r\n              </div>\r\n            </div>\r\n          </StyledContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"LayerContainer\">\r\n      <div>\r\n        <h3 style={{ color: Colors.textMain }}>Layers</h3>\r\n      </div>\r\n\r\n      <div\r\n        className=\"Note\"\r\n        style={{\r\n          color: Colors.textMain,\r\n          borderLeft: `solid 4px ${Colors.secondary}`,\r\n          backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n        }}\r\n      >\r\n        Drag and drop the layers to delete them or change the order of visualization\r\n      </div>\r\n\r\n      <div className=\"ToggleButtons\">\r\n        <div\r\n          class=\"Button\"\r\n          style={{ backgroundColor: Colors.secondary, color: Colors.text }}\r\n          onClick={() => {\r\n            toggleAllVisibility(true);\r\n          }}\r\n        >\r\n          Show All\r\n        </div>\r\n\r\n        <div\r\n          class=\"Button\"\r\n          style={{ backgroundColor: Colors.secondary, color: Colors.text }}\r\n          onClick={() => {\r\n            toggleAllVisibility(false);\r\n          }}\r\n        >\r\n          Hide All\r\n        </div>\r\n      </div>\r\n      <Droppable droppableId={\"0\"}>\r\n        {(provided) => (\r\n          <div ref={provided.innerRef} {...provided.droppableProps}>\r\n            {layersCopy.map((layer, index) => (\r\n              <Item layer={layer} key={layer.id} index={index} />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n      <Droppable droppableId={\"delete\"}>\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            style={{ color: Colors.delete, borderColor: Colors.delete }}\r\n            className=\"DeleteLayer\"\r\n          >\r\n            D E L E T E{provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  font-size: 14px;\r\n  margin-top: 6px;\r\n  opacity: ${(props) => (props.isDragging ? 0.6 : 1)};\r\n  background-color: ${(props) => (props.draggingOver ? Colors.delete : Colors.secondary)};\r\n  border: ${(props) =>\r\n    props.isDragging ? \"1px solid rgba(0, 0, 0, 0.6);\" : \"1px solid rgba(0, 0, 0, 0.3);\"};\r\n  box-shadow: ${(props) =>\r\n    props.isDragging ? \"0px 10px 20px rgba(0, 0, 0, 0.49);\" : \"-2px 3px 3px rgba(0, 0, 0, 0.43);\"};\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: ${Colors.text};\r\n`;\r\n\r\nexport default LayerList;\r\n","import {\r\n  gloshaugen,\r\n  campusrunden,\r\n  kantiner,\r\n  hoyskoleparken,\r\n  frimerket,\r\n  parkering,\r\n  bysykkelstativ,\r\n  lilleCampusrunden,\r\n  Train,\r\n  Nidelva,\r\n  kirker,\r\n  Daniel,\r\n  Bunnpris,\r\n} from \"./geoJSON.js\";\r\n\r\nimport { getRandomColor } from \"../constants/Colors\";\r\n\r\nexport const createPolygonLayer = (data, id, visible) => {\r\n  return {\r\n    id: id,\r\n    type: \"fill\",\r\n    source: {\r\n      type: \"geojson\",\r\n      data: data,\r\n    },\r\n    paint: {\r\n      \"fill-color\": getRandomColor(),\r\n      \"fill-opacity\": 0.6,\r\n    },\r\n    layout: {\r\n      visibility: visible ? \"visible\" : \"none\",\r\n    },\r\n  };\r\n};\r\n\r\nexport const createLineLayer = (data, id, visible) => {\r\n  return {\r\n    id: id,\r\n    type: \"line\",\r\n    source: {\r\n      type: \"geojson\",\r\n      data: data,\r\n    },\r\n    paint: {\r\n      \"line-color\": getRandomColor(),\r\n      \"line-width\": 1,\r\n    },\r\n    layout: {\r\n      visibility: visible ? \"visible\" : \"none\",\r\n    },\r\n  };\r\n};\r\n\r\nexport const createPointLayer = (data, id, visible) => {\r\n  return {\r\n    id: id,\r\n    type: \"circle\",\r\n    source: {\r\n      type: \"geojson\",\r\n      data: data,\r\n    },\r\n    paint: {\r\n      \"circle-color\": getRandomColor(),\r\n      \"circle-radius\": 5,\r\n      \"circle-stroke-width\": 1,\r\n      \"circle-stroke-color\": getRandomColor(),\r\n    },\r\n    layout: {\r\n      visibility: visible ? \"visible\" : \"none\",\r\n    },\r\n  };\r\n};\r\n\r\nconst layer_gloshaugen = createPolygonLayer(gloshaugen, \"Gløshaugen\", true);\r\n\r\nconst layer_hoyskoleparken = createPolygonLayer(hoyskoleparken, \"Høyskoleparken\", false);\r\n\r\nconst layer_campusrunden = createLineLayer(campusrunden, \"Campusrunden\", false);\r\n\r\nconst layer_nidelva = createLineLayer(Nidelva, \"Nidelva\", true);\r\n\r\nconst layer_kirker = createPointLayer(kirker, \"Kirker\", true);\r\n\r\nconst layer_daniel = createPointLayer(Daniel, \"Daniel\", true);\r\n\r\nconst layer_bunnpris = createPointLayer(Bunnpris, \"Bunnpris\", true);\r\n\r\nconst layer_train = createLineLayer(Train, \"Train\", true);\r\n\r\nconst allLayers = [\r\n  layer_gloshaugen,\r\n  layer_hoyskoleparken,\r\n  layer_campusrunden,\r\n  layer_nidelva,\r\n  layer_kirker,\r\n  //layer_daniel,\r\n  layer_bunnpris,\r\n  //layer_train,\r\n];\r\n\r\nexport default allLayers;\r\n","export const gloshaugen = {\r\n  geometry: {\r\n    coordinates: [\r\n      [\r\n        [10.401351609034037, 63.42002084745741],\r\n        [10.400427523901271, 63.419562258241626],\r\n        [10.398965789199622, 63.41923898602835],\r\n        [10.398814575269284, 63.41852476704713],\r\n        [10.399184209332333, 63.41815637345442],\r\n        [10.400679547110258, 63.41846462147521],\r\n        [10.40089796724294, 63.41813381859336],\r\n        [10.400545134730436, 63.41802856233127],\r\n        [10.401351609034037, 63.417269202123634],\r\n        [10.402762939083914, 63.41632185327177],\r\n        [10.403233382425555, 63.4158030537327],\r\n        [10.403905444349391, 63.41560004265932],\r\n        [10.404359086140488, 63.41520153526773],\r\n        [10.405148758918273, 63.41535191606701],\r\n        [10.405770416190336, 63.41475038813752],\r\n        [10.406039240974764, 63.41432179178662],\r\n        [10.40598883632299, 63.41394582480257],\r\n        [10.40649288276586, 63.41369768389487],\r\n        [10.407450570999828, 63.413900708432095],\r\n        [10.406980127658102, 63.414163886252624],\r\n        [10.40824024377767, 63.41430675319967],\r\n        [10.409701978454422, 63.41450225418683],\r\n        [10.410441246555706, 63.414803022331824],\r\n        [10.411096506953726, 63.415043634578524],\r\n        [10.411298125510967, 63.415757940284436],\r\n        [10.411365331713313, 63.416239146726525],\r\n        [10.410340437277057, 63.41629929696742],\r\n        [10.410357238827658, 63.4167804943238],\r\n        [10.408878702600276, 63.41696845984805],\r\n        [10.408290648404545, 63.417569941244494],\r\n        [10.406980127658102, 63.417389498151664],\r\n        [10.40556879760831, 63.41875031180561],\r\n        [10.404543903171998, 63.41944197133037],\r\n        [10.403435001007693, 63.41999829406322],\r\n        [10.401351609034037, 63.42002084745741],\r\n      ],\r\n    ],\r\n    type: \"Polygon\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const hoyskoleparken = {\r\n  geometry: {\r\n    coordinates: [\r\n      [\r\n        [10.394903495790999, 63.422120509919665],\r\n        [10.395676745550787, 63.42068536969313],\r\n        [10.398282883605788, 63.420851952155914],\r\n        [10.39759555047658, 63.419262972326464],\r\n        [10.39759555047658, 63.41827622278413],\r\n        [10.398569272402597, 63.4170331263164],\r\n        [10.399886660850882, 63.41716128308343],\r\n        [10.400230327415528, 63.4167255477353],\r\n        [10.40100357717526, 63.415956586853326],\r\n        [10.401118132689788, 63.41521323839575],\r\n        [10.403208770897805, 63.415200421876904],\r\n        [10.404697992649602, 63.41496972350566],\r\n        [10.405499881272164, 63.41505943975815],\r\n        [10.405156214728692, 63.41535421975826],\r\n        [10.404039298404257, 63.41531577036409],\r\n        [10.402979659868862, 63.41590532206311],\r\n        [10.402807826586582, 63.41626417368377],\r\n        [10.401519077001069, 63.417327886020416],\r\n        [10.400860382776898, 63.41790458103651],\r\n        [10.401032216038033, 63.41810962535328],\r\n        [10.400631271726752, 63.41846844938482],\r\n        [10.399313883257292, 63.41816088620692],\r\n        [10.398769744547621, 63.41863504473051],\r\n        [10.399743466452492, 63.41896823251753],\r\n        [10.40083174389298, 63.41900667700895],\r\n        [10.40043079958167, 63.419532079945725],\r\n        [10.401146771573679, 63.42003184453105],\r\n        [10.401662271399431, 63.420147173585974],\r\n        [10.402578715557581, 63.42000621579075],\r\n        [10.404468881599485, 63.42049315795734],\r\n        [10.4031514931512, 63.42119792802103],\r\n        [10.399285244394576, 63.42206925614613],\r\n        [10.39862655014926, 63.4215438997104],\r\n        [10.39527580121839, 63.4221845770042],\r\n        [10.394903495790999, 63.422120509919665],\r\n      ],\r\n    ],\r\n    type: \"Polygon\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const campusrunden = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.398963379348913, 63.421828174887565],\r\n      [10.399432496365904, 63.42179669113128],\r\n      [10.399995436782831, 63.42140838863753],\r\n      [10.400863303271166, 63.42090463702175],\r\n      [10.401355876125109, 63.42041137165475],\r\n      [10.402481756976272, 63.42064226288278],\r\n      [10.404287857481222, 63.42063176786573],\r\n      [10.404616239406948, 63.4205687976943],\r\n      [10.403068153247489, 63.41999156465596],\r\n      [10.402763227176024, 63.41991809779594],\r\n      [10.402857050593326, 63.4197921541755],\r\n      [10.403396535155906, 63.419897107231634],\r\n      [10.404452048444085, 63.41933035616515],\r\n      [10.405132268115239, 63.41872161105519],\r\n      [10.405319914932448, 63.4187845852843],\r\n      [10.40459278355263, 63.41948778814131],\r\n      [10.404686606952595, 63.41987611665192],\r\n      [10.405202635678165, 63.42023295442834],\r\n      [10.405718664386455, 63.420096516982],\r\n      [10.405906311203665, 63.41986562135435],\r\n      [10.406492707474882, 63.41961373309897],\r\n      [10.407219838854672, 63.41940382452751],\r\n      [10.407876602671479, 63.41920440995861],\r\n      [10.407946970217125, 63.41903648082899],\r\n      [10.407571676617408, 63.418805576667125],\r\n      [10.407032192037462, 63.41855367909358],\r\n      [10.406914912783236, 63.41842772947871],\r\n      [10.406961824491873, 63.41820731631833],\r\n      [10.407430941508835, 63.41727316555122],\r\n      [10.407688955871635, 63.41679033411964],\r\n      [10.408134617034307, 63.41647543967579],\r\n      [10.408462998942753, 63.41642295693222],\r\n      [10.408462998942753, 63.41627600474075],\r\n      [10.40780623512589, 63.41625501150571],\r\n      [10.40759513245439, 63.4156776916042],\r\n      [10.408298807979833, 63.41549924491997],\r\n      [10.409213586176833, 63.41529980319456],\r\n      [10.40984689413935, 63.415068868932366],\r\n      [10.41003454095656, 63.41465948090334],\r\n      [10.40984689413935, 63.41422909231076],\r\n      [10.409166674468196, 63.41404013918057],\r\n      [10.40832226383418, 63.413945662150496],\r\n      [10.407126015437399, 63.413819692291526],\r\n      [10.406258148966401, 63.41373571207683],\r\n      [10.405812487803729, 63.41389317477618],\r\n      [10.405765576095092, 63.41415561068695],\r\n      [10.405601385132229, 63.41437605499735],\r\n      [10.405789031949439, 63.414774949915596],\r\n      [10.40553101758664, 63.41504787481736],\r\n      [10.405226091515175, 63.415341791040305],\r\n      [10.404522415989732, 63.41526831226798],\r\n      [10.403842196318578, 63.415436263470326],\r\n      [10.403443446864514, 63.415635704250406],\r\n      [10.403021241538852, 63.415877130704985],\r\n      [10.402411389413288, 63.416370474092616],\r\n      [10.401731169742192, 63.41649643274553],\r\n      [10.401308964433838, 63.41670636260534],\r\n      [10.400957126671102, 63.416989765480906],\r\n      [10.400699112308303, 63.41727316555122],\r\n      [10.400464553799765, 63.41759854736111],\r\n      [10.399831245819968, 63.41777698098372],\r\n      [10.398869555931668, 63.41791342946976],\r\n      [10.398353527223378, 63.41813384488958],\r\n      [10.39783749849775, 63.41843822530268],\r\n      [10.397767130952161, 63.41871111533496],\r\n      [10.398588085731888, 63.41885805504924],\r\n      [10.398494262331951, 63.41924639209023],\r\n      [10.399385584657267, 63.41935134714447],\r\n      [10.399385584657267, 63.41961373309897],\r\n      [10.399690510711395, 63.41996007888241],\r\n      [10.400206539436994, 63.42006503132376],\r\n      [10.399831245819968, 63.42055830265036],\r\n      [10.399385584657267, 63.42078919269491],\r\n      [10.39854117402325, 63.42088364717978],\r\n      [10.398962150672816, 63.42182411228569],\r\n    ],\r\n    type: \"LineString\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const Train = {\r\n  geometry: {\r\n    coordinates: [],\r\n    type: \"LineString\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const Daniel = {\r\n  geometry: {\r\n    coordinates: [10.404468071331877, 63.41559939466791],\r\n    type: \"Point\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const Bunnpris = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.368512510817737, 63.42994852160656],\r\n      [10.38759803978315, 63.43056280747055],\r\n      [10.391698015712416, 63.43094341442257],\r\n      [10.393568673684607, 63.43209464104748],\r\n      [10.407763730110448, 63.431822092460486],\r\n      [10.417481933466055, 63.43234748297599],\r\n      [10.424072247257554, 63.436515300442025],\r\n      [10.39903054375227, 63.42224888711106],\r\n      [10.395443638595877, 63.41949611406021],\r\n      [10.414146767627388, 63.41333431725374],\r\n      [10.430664118992532, 63.41897695343559],\r\n      [10.431314382278305, 63.41277373049425],\r\n    ],\r\n    type: \"MultiPoint\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\nexport const kirker = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.396720913598973, 63.42703383046102],\r\n      [10.398142121071494, 63.4301819619906],\r\n      [10.411310188156214, 63.4271889546792],\r\n      [10.410446784307295, 63.43282619267729],\r\n      [10.430323692026917, 63.437105663900454],\r\n      [10.384308314280334, 63.43043662846472],\r\n      [10.444320076624017, 63.41313125237676],\r\n      [10.425110770960066, 63.422605516377416],\r\n      [10.444719129274588, 63.4198339048891],\r\n      [10.442437499526307, 63.42547085744629],\r\n      [10.376361113637408, 63.429918608147965],\r\n      [10.398622485207763, 63.417698348200176],\r\n      [10.40043842199649, 63.411012789693366],\r\n      //[10.481027040630789, 63.34752733596439],\r\n      //[10.42961104350124, 63.397923003121214],\r\n      //[10.413149275168614, 63.38336683327313],\r\n      //[10.493842640290277, 63.42189715680415],\r\n      //[10.5356514282534, 63.42984664930655],\r\n      //[10.346766908915008, 63.364803764724],\r\n      //[10.306487714452633, 63.32824827269228],\r\n      //[10.115779963948194, 63.355838312059326],\r\n      //[10.370890115351639, 63.40489532802725],\r\n      //[10.355122165448782, 63.41789839073055],\r\n      //[10.369592987500381, 63.392560621116566],\r\n      //[10.276528897827873, 63.41681065067347],\r\n      //[10.405431949161098, 63.36146524431688],\r\n      //[10.351592502028389, 63.35033940920428],\r\n      //[10.370287911025187, 63.38614463632548],\r\n      //[10.404818417377173, 63.30983948952432],\r\n      //[10.47669067175937, 63.295328192644156],\r\n      //[10.355822850745824, 63.418775487653775],\r\n    ],\r\n    type: \"MultiPoint\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const lilleCampusrunden = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.401418990042544, 63.419970015614894],\r\n      [10.400901009924183, 63.41975678746854],\r\n      [10.400693817876856, 63.41942303588149],\r\n      [10.401128921176252, 63.41892240122121],\r\n      [10.401750497318318, 63.41889458792784],\r\n      [10.40268286153136, 63.418162161497264],\r\n      [10.402537827098257, 63.41801381968713],\r\n      [10.404257521064778, 63.41640055295119],\r\n      [10.402972930397652, 63.41617802627556],\r\n      [10.403097245626043, 63.415918409643695],\r\n      [10.403594506513258, 63.41564951850495],\r\n      [10.40392601378906, 63.41544553044167],\r\n      [10.40431967867903, 63.415269357770455],\r\n      [10.405293481301527, 63.41530644684508],\r\n      [10.405687146191525, 63.41498191581553],\r\n      [10.405832180624657, 63.41451829369299],\r\n      [10.405915057443593, 63.41396193724361],\r\n      [10.406288003128822, 63.41371157332537],\r\n      [10.407137490496552, 63.41376720993597],\r\n      [10.40904365733212, 63.414008300693354],\r\n      [10.409789548702577, 63.414360660461654],\r\n      [10.409851706316772, 63.41479646786371],\r\n      [10.409188691765308, 63.41511172866814],\r\n      [10.407841943457498, 63.41538989708161],\r\n      [10.407427559362816, 63.41571442349348],\r\n      [10.407448278567529, 63.41609457833286],\r\n      [10.407627633457508, 63.41628668632953],\r\n      [10.40713557247119, 63.41680965585067],\r\n      [10.406951049616993, 63.416881219359425],\r\n      [10.406212958137587, 63.416963792416794],\r\n      [10.405868515447168, 63.41729408226456],\r\n      [10.405228836165008, 63.4179216224957],\r\n      [10.404539950799858, 63.41794914587575],\r\n      [10.403998683714889, 63.41843355303635],\r\n      [10.403617336450537, 63.41841703929052],\r\n      [10.40290669990435, 63.41900337594305],\r\n      [10.403382555433467, 63.41936717945157],\r\n      [10.402792036111123, 63.419867275003384],\r\n      [10.402595196342702, 63.41998072830296],\r\n      [10.401440847853706, 63.41997475708786],\r\n    ],\r\n    type: \"LineString\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const Nidelva = {\r\n  type: \"Feature\",\r\n  geometry: {\r\n    type: \"LineString\",\r\n    coordinates: [\r\n      [10.4119296182891, 63.4404901376194],\r\n      [10.4113078578979, 63.4397977227565],\r\n      [10.4094195343785, 63.4377212621506],\r\n      [10.4092225507492, 63.437467889087],\r\n      [10.4088763732351, 63.4371443728089],\r\n      [10.408594091059, 63.4369055343879],\r\n      [10.4085182430399, 63.4368237603395],\r\n      [10.4085060974514, 63.4367352967604],\r\n      [10.4085232343427, 63.4365545712666],\r\n      [10.4085028135662, 63.4364676093513],\r\n      [10.4084434694099, 63.4363820669701],\r\n      [10.4081347422912, 63.4361511359117],\r\n      [10.4078086928313, 63.4355418164876],\r\n      [10.407757555111, 63.4353639417379],\r\n      [10.4077339404093, 63.4351918072544],\r\n      [10.4073513730124, 63.4349842706351],\r\n      [10.4073640965491, 63.4348998486541],\r\n      [10.4074505443113, 63.4347249545195],\r\n      [10.4074631157074, 63.4346354830823],\r\n      [10.4074508294213, 63.4345460184522],\r\n      [10.4074112547127, 63.4344581585334],\r\n      [10.4068745147662, 63.4337823232927],\r\n      [10.4067844971577, 63.4337032680293],\r\n      [10.4066603167975, 63.4336329030046],\r\n      [10.4065348386963, 63.4334639661107],\r\n      [10.4064386710878, 63.4333852971477],\r\n      [10.4062970292155, 63.4332181417645],\r\n      [10.406206407174, 63.4331382564117],\r\n      [10.4061485202436, 63.433052424224],\r\n      [10.4059614692795, 63.4328950839103],\r\n      [10.4056436524385, 63.4325660041014],\r\n      [10.4054557474808, 63.4324080033427],\r\n      [10.4052898488774, 63.4322447930052],\r\n      [10.4050969336591, 63.4320880978952],\r\n      [10.4047326829698, 63.4316705229497],\r\n      [10.4045288712643, 63.4315175746772],\r\n      [10.4044459958246, 63.4314359959762],\r\n      [10.4043532956653, 63.4312621070605],\r\n      [10.4040410405117, 63.4309318827092],\r\n      [10.403939617855, 63.4308546376601],\r\n      [10.4034649894267, 63.4303602876144],\r\n      [10.4033474802418, 63.4301895841057],\r\n      [10.4032559117401, 63.4301099366158],\r\n      [10.4031462339439, 63.4300352584145],\r\n      [10.4029885774398, 63.4298704551237],\r\n      [10.4027140520622, 63.4295335985454],\r\n      [10.4025913073201, 63.42946325215],\r\n      [10.4023763664124, 63.4292122430433],\r\n      [10.4022782594961, 63.4291342041536],\r\n      [10.4021552814641, 63.4290639271311],\r\n      [10.4020753926435, 63.428981585976],\r\n      [10.4019567601259, 63.4288109607803],\r\n      [10.4018092057007, 63.4286442512692],\r\n      [10.4015986622495, 63.4282982239813],\r\n      [10.4015593826144, 63.4282103613847],\r\n      [10.4015223491049, 63.4280321003696],\r\n      [10.4013458681729, 63.4276823862503],\r\n      [10.4013252011961, 63.4275932250696],\r\n      [10.4013346847284, 63.4275037504664],\r\n      [10.4012809712348, 63.4273263276311],\r\n      [10.4012826049433, 63.4272368698387],\r\n      [10.4013184478161, 63.4271489604163],\r\n      [10.4015348908584, 63.4268980656285],\r\n      [10.4016957121554, 63.4267382923125],\r\n      [10.4017684037825, 63.4265627089761],\r\n      [10.4018114425268, 63.4262946212569],\r\n      [10.4017944248775, 63.4262052693045],\r\n      [10.4016990885553, 63.4260312299326],\r\n      [10.4016777930513, 63.4258526631176],\r\n      [10.4016287838294, 63.4257660803471],\r\n      [10.4015515967207, 63.4256833419062],\r\n      [10.4014504337787, 63.4256059823292],\r\n      [10.4013344106036, 63.425532900634],\r\n      [10.4009456702459, 63.4253297538385],\r\n      [10.4007414102817, 63.4251755917204],\r\n      [10.4001666118328, 63.4248085257294],\r\n      [10.4000000595618, 63.4247165374018],\r\n      [10.3997695302885, 63.4246070810868],\r\n      [10.3996200991578, 63.4245474134627],\r\n      [10.3993084601468, 63.4244348523011],\r\n      [10.3988208137054, 63.4242778879043],\r\n      [10.3983178005652, 63.4241310567039],\r\n      [10.3979594098147, 63.4240510623177],\r\n      [10.3975884902924, 63.4239836547765],\r\n      [10.397201536328, 63.4239380673765],\r\n      [10.3968043493007, 63.4239179509359],\r\n      [10.3956035884984, 63.42392472593],\r\n      [10.3947206446312, 63.4239496172034],\r\n      [10.3942051934094, 63.423942297847],\r\n      [10.3936056154776, 63.4239559526952],\r\n      [10.3924336179545, 63.4240707878918],\r\n      [10.391279540058, 63.4242196030154],\r\n      [10.3905151439169, 63.4243262975923],\r\n      [10.3901393412952, 63.4243881205992],\r\n      [10.3895975599695, 63.4245038506555],\r\n      [10.3889041077728, 63.4246831545764],\r\n      [10.3884132726886, 63.4248380997868],\r\n      [10.3880990374995, 63.4249492244968],\r\n      [10.3876563569516, 63.425130890193],\r\n      [10.3872323813734, 63.4253214015758],\r\n      [10.3868621223376, 63.4255330248414],\r\n      [10.3864640881435, 63.4257341662737],\r\n      [10.3853535010443, 63.4263692962033],\r\n      [10.3850580997786, 63.42649011241],\r\n      [10.3846469627007, 63.426686244101],\r\n      [10.3843864072147, 63.4268223857193],\r\n      [10.3840794464894, 63.4269367726417],\r\n      [10.3837937343941, 63.4270623411815],\r\n      [10.3835186792199, 63.4271926799495],\r\n      [10.3832459445019, 63.4273489389131],\r\n      [10.3827715787433, 63.4275138888892],\r\n      [10.3822784018369, 63.4276673058126],\r\n      [10.3802685635526, 63.4282568577833],\r\n      [10.3783729070854, 63.428758479164],\r\n      [10.3779964115263, 63.4288191329285],\r\n      [10.3776108544596, 63.4288672483024],\r\n      [10.3770161527122, 63.4289043480058],\r\n      [10.3760174344911, 63.4289350071169],\r\n      [10.3754167713789, 63.4289345601237],\r\n      [10.3750175744434, 63.4289226793784],\r\n      [10.3746243797397, 63.428889539916],\r\n      [10.3742456182846, 63.4288314871853],\r\n      [10.3740655779653, 63.4287926414097],\r\n      [10.3738950665153, 63.4287456550716],\r\n      [10.3735655210648, 63.4286438896663],\r\n      [10.3734190341674, 63.4285829259991],\r\n      [10.3731520610877, 63.4284493165941],\r\n      [10.3730252570822, 63.4283799254266],\r\n      [10.3728090936978, 63.4282291578289],\r\n      [10.3724628658521, 63.4279059937412],\r\n      [10.372413481387, 63.4278190719839],\r\n      [10.3723882367898, 63.4277302190962],\r\n      [10.3723619544329, 63.4274616274674],\r\n      [10.3723940510468, 63.4273733076207],\r\n      [10.3725511093312, 63.4272089116825],\r\n      [10.3726109998817, 63.4271233553807],\r\n      [10.372680368038, 63.4269468384645],\r\n      [10.3727038156666, 63.426767779531],\r\n      [10.3727305946428, 63.4266789500082],\r\n      [10.3727820665927, 63.4265927825809],\r\n      [10.372868051943, 63.4265118725169],\r\n      [10.3732337416698, 63.4262988127433],\r\n      [10.3735654634328, 63.4260746127579],\r\n      [10.373707183946, 63.426013103646],\r\n      [10.3740195872117, 63.4259010746663],\r\n      [10.374989746016, 63.4254481632142],\r\n      [10.3768179168281, 63.4246186931817],\r\n      [10.3769495406855, 63.4245511736197],\r\n      [10.377650270743, 63.4241141757912],\r\n      [10.3779725702754, 63.4238871807903],\r\n      [10.3785616405049, 63.4235246714042],\r\n      [10.3790626791675, 63.4232448763661],\r\n      [10.3798129437458, 63.4227993347546],\r\n      [10.3800074405151, 63.4226425892193],\r\n      [10.3806708917652, 63.4221941313261],\r\n      [10.3814828048042, 63.4215758154917],\r\n      [10.3821276029661, 63.421121944503],\r\n      [10.3824131752069, 63.4208852970089],\r\n      [10.3828470586633, 63.420583950667],\r\n      [10.3832117377862, 63.4202647965442],\r\n      [10.3836102313069, 63.4198535227115],\r\n      [10.3841894369999, 63.4190894250479],\r\n      [10.3848478860933, 63.41796167992],\r\n      [10.3850935979183, 63.4172528769328],\r\n      [10.3852016860813, 63.4166271331496],\r\n      [10.3852289545563, 63.4161790242052],\r\n      [10.3852911408432, 63.4159115078602],\r\n      [10.3853399144397, 63.4158247832623],\r\n      [10.385408098948, 63.4157404714787],\r\n      [10.3855683991534, 63.4155761774309],\r\n      [10.3860882561527, 63.4151932465066],\r\n      [10.3864616160678, 63.4149829002136],\r\n      [10.386755083666, 63.4148609298647],\r\n      [10.3870742384045, 63.4147528103421],\r\n      [10.3874059522785, 63.4146525031476],\r\n      [10.3877624351618, 63.4145712907489],\r\n      [10.3892154281233, 63.4143261126141],\r\n      [10.3896132099606, 63.4143070378649],\r\n      [10.3900047707507, 63.4142699060181],\r\n      [10.3911325169203, 63.414089332156],\r\n      [10.3915319610982, 63.4140814589176],\r\n      [10.3921112107827, 63.4140108357384],\r\n      [10.3922994187636, 63.4139804656849],\r\n      [10.3926624453514, 63.4139051171185],\r\n      [10.393532310587, 63.4136839159935],\r\n      [10.3936707026268, 63.4136359502044],\r\n    ],\r\n  },\r\n  properties: {\r\n    objektType: \"Hovedelv i vassOmr\",\r\n    nedborfeltVassdragNr: \"123.Z\",\r\n    elvenavn: \"Nidelvvassdraget\",\r\n    elvelengde: 176431.87385132,\r\n    nivaa: \"1a\",\r\n    vassdragsomrade: \"123\",\r\n    dataUttaksdato: \"20201126\",\r\n    eksportType: \"NVEs nedlastningsløsning\",\r\n  },\r\n};\r\n/*  { \"type\": \"Feature\", \"properties\": { \"gml_id\": \"id932ee32d-2abb-4d37-a769-4586b108353a\", \"datauttaksdato\": \"2020-11-14T03:25:20\", \"målemetode\": 99, \"geodataeier\": \"KA kirkelig arbeidsgiver- og interesseorganisasjon\", \"geodataprodusent\": \"Kartverket\", \"bygningsId\": 2379, \"bygningsnavn\": \"Ilen kirke\", \"lokalId\": \"d458c007-787e-40bf-b10c-8dd3183e7716\", \"navnerom\": \"https:\\/\\/data.geonorge.no\\/sosi\\/befolkning\\/kirkebygg_forenklet\", \"versjonId\": 20190815, \"bygningsgruppe\": \"K\", \"bygningskode\": 160101201, \"adressenavn\": \"Kongens gate 99\", \"postnummer\": 7012, \"poststed\": \"TRONDHEIM\", \"kommunenummer\": 5001, \"kommune\": \"Trondheim\", \"fylkesnummer\": 50, \"fylke\": \"Trøndelag\", \"orgNummerForvalter\": 976998294, \"forvalternavn\": \"Kirkelig fellesråd i Trondheim\", \"orgNummerEier\": 976998138, \"eiernavn\": \"Ilen sokn\", \"vernestatus\": \"Listeført (etter 1850)\", \"godkjentKapasitet\": 600, \"hovedmateriale\": \"mur\", \"gab\": 182161144 }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [[ 569660.800107417977415, 7033864.809541489928961 ], [ 569707.926880417973734, 7033929.466755350120366 ], [ 569771.192671753000468, 7034281.728391249664128 ], [ 570435.583721918985248, 7033962.707123699598014 ], [ 570378.668502263957635, 7034589.76676470041275 ], [ 571359.719285152968951, 7035088.506428319960833 ], [ 569080.314891046960838, 7034295.105857810005546 ], [ 572118.145083646988496, 7032433.365042240358889 ], [ 571135.618474502000026, 7033467.346604520455003 ], [ 572121.227095091016963, 7033180.506057050079107 ], [ 571993.199450375046581, 7033805.910475520417094 ], [ 574119.689272211981006, 7025166.881388570182025 ], [ 571421.590721042011864, 7030722.651356990449131 ],  [ 569825.528759561944753, 7032891.528838530182838 ], [ 569932.460593639058061, 7032148.71361515019089 ], [ 570635.048011385952123, 7029082.807091720402241 ], [ 574567.81336658296641, 7033466.598431100137532 ], [ 576633.245012894971296, 7034401.518041069619358 ], [ 567360.820085069979541, 7026943.344618960283697 ], [ 565429.409252183046192, 7022829.171217399649322 ], [ 555825.970554510015063, 7025722.558006379753351 ], [ 568471.687444504001178, 7031435.288101810030639 ], [ 567653.57219272502698, 7032867.138840139843524 ], [ 568436.283176869968884, 7030059.762988270260394 ], [ 563732.671618615044281, 7032665.366037850268185 ], [ 570302.862926049972884, 7026634.423061479814351 ], [ 567636.136074922978878, 7025337.035389199852943 ], [ 568486.289912694017403, 7029345.738015820272267 ], [ 570398.217822088976391, 7020882.518004019744694 ], [ 574036.64424249494914, 7019346.886055779643357 ], [ 568685.01648423098959, 7034228.850090290419757 ], [ 567686.481312109041028, 7032965.591953399591148 ]] } },\r\n */\r\n","import React from \"react\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst OperationHeader = (props) => {\r\n  let { operation, helpTip } = props;\r\n  return (\r\n    <div className=\"OperationHeader\">\r\n      <p style={{ fontSize: \"13px\", margin: \"0\", fontWeight: \"bold\", color: Colors.text }}>{operation}</p>\r\n      <div className=\"HelpTip\" style={{ backgroundColor: Colors.button }}>\r\n        <p>{helpTip}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OperationHeader;\r\n","import React from \"react\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst LayerSelect = (props) => {\r\n  let { chosenLayerId, setChosenLayerId, layers } = props;\r\n  return (\r\n    <select\r\n      className=\"LayerSelect\"\r\n      style={{ color: Colors.secondary }}\r\n      onChange={(event) => setChosenLayerId(event.target.value)}\r\n      value={chosenLayerId}\r\n    >\r\n      {layers.map((layer) => (\r\n        <option value={layer.id} key={layer.id}>\r\n          {layer.id}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default LayerSelect;\r\n","import React from \"react\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst OperationButton = (props) => {\r\n  return (\r\n    <button\r\n      className=\"OperationButton\"\r\n      style={{ backgroundColor: \"white\", color: Colors.primary, borderRadius: \"5px\" }}\r\n      onClick={() => props.operationHandler()}\r\n    >\r\n      Go\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OperationButton;\r\n","import React, { useState } from \"react\";\r\nimport buffer from \"@turf/buffer\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { createPolygonLayer } from \"../../../datasets/layers\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\n\r\nconst Buffer = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const [radius, setRadius] = useState(5);\r\n  const [chosenLayerId, setChosenLayerId] = useState(layersCopy[0].id);\r\n\r\n  const performBuffer = (layer) => {\r\n    let bufferedData = buffer(layer.source.data, radius, { units: \"metres\" });\r\n    // Change id of the new layer\r\n    let newID = layer.id + `_${radius}m`;\r\n    let createdLayer = createPolygonLayer(bufferedData, newID, true);\r\n    if (layersCopy.findIndex((lyr) => lyr.id === newID) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n    // Adds the newly created layer to the beginning of the array\r\n    layersCopy.unshift(createdLayer);\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"B U F F E R\"}\r\n          helpTip={\"Creates a buffer around a layer for a given radius.\"}\r\n        />\r\n        <LayerSelect chosenLayerId={chosenLayerId} setChosenLayerId={setChosenLayerId} layers={layersCopy} />\r\n\r\n        <label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"number\"\r\n            id=\"quantity\"\r\n            min=\"5\"\r\n            max=\"500\"\r\n            step=\"5\"\r\n            value={radius}\r\n            onChange={(event) => setRadius(event.target.value)}\r\n          />\r\n          metres\r\n        </label>\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() => performBuffer(layersCopy.find((layer) => layer.id === chosenLayerId))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buffer;\r\n","import React, { useState } from \"react\";\r\nimport difference from \"@turf/difference\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport { createPolygonLayer } from \"../../../datasets/layers\";\r\n\r\nconst Difference = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n\r\n  const polygonLayers = layersCopy.filter((layer) => {\r\n    //console.log(layer);\r\n    return (\r\n      layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n    );\r\n  });\r\n\r\n  const [chosenLayerId, setChosenLayerId] = useState(polygonLayers[0].id);\r\n  const [chosenLayerId2, setChosenLayerId2] = useState(polygonLayers[0].id);\r\n\r\n  const performDifference = (layer1, layer2) => {\r\n    if (layer1.id === layer2.id) {\r\n      alert(\"You need to choose two different layers, in order to perform Difference\");\r\n      return;\r\n    }\r\n    let differenceData = difference(layer1.source.data, layer2.source.data);\r\n    // Change id of the new layer\r\n    let newID = layer1.id + `_${layer2.id}_DIFF`;\r\n\r\n    let createdLayer = createPolygonLayer(differenceData, newID, true);\r\n\r\n    if (layersCopy.findIndex((layer) => layer.id === newID) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n\r\n    layersCopy.unshift(createdLayer);\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"D I F F E R E N C E\"}\r\n          helpTip={\"Finds the difference between two polygons by clipping the second polygon from the first.\"}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId}\r\n          setChosenLayerId={setChosenLayerId}\r\n          layers={polygonLayers}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId2}\r\n          setChosenLayerId={setChosenLayerId2}\r\n          layers={polygonLayers}\r\n        />\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performDifference(\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId),\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId2)\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Difference;\r\n","import React, { useState } from \"react\";\r\nimport * as turf from \"@turf/turf\";\r\nimport intersect from \"@turf/intersect\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\nimport { createPolygonLayer } from \"../../../datasets/layers\";\r\n\r\nconst convertToListOfPolygons = (polygon) => {\r\n  if (polygon.source.data.geometry.type === \"MultiPolygon\") {\r\n    return polygon.source.data.geometry.coordinates.map((c) => turf.polygon(c));\r\n  } else {\r\n    return [polygon.source.data];\r\n  }\r\n};\r\n\r\nconst Intersect = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const polygonLayers = layersCopy.filter((layer) => {\r\n    //console.log(layer);\r\n\r\n    return (\r\n      layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n    );\r\n  });\r\n\r\n  const [chosenLayerId, setChosenLayerId] = useState(polygonLayers[0].id);\r\n  const [chosenLayerId2, setChosenLayerId2] = useState(polygonLayers[0].id);\r\n\r\n  const performIntersect = (layer1, layer2) => {\r\n    // Must choose two separate layers to perform Intersect..\r\n    if (layer1.id === layer2.id) {\r\n      alert(\"You need to choose two different layers, in order to perform Intersect\");\r\n      return;\r\n    }\r\n\r\n    let pieces1 = convertToListOfPolygons(layer1);\r\n    let pieces2 = convertToListOfPolygons(layer2);\r\n\r\n    let intersectedPolygons = [];\r\n    for (let i = 0; i < pieces1.length; i++) {\r\n      for (let j = 0; j < pieces2.length; j++) {\r\n        let data = intersect(pieces1[i], pieces2[j]);\r\n        console.log(\"Piece1: \", pieces1[i]);\r\n        console.log(\"Piece2: \", pieces2[j]);\r\n        console.log(data);\r\n        if (data !== null) {\r\n          intersectedPolygons.push(data.geometry.coordinates);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"intersected polygons: \", intersectedPolygons);\r\n\r\n    // If the intersect operation returns null..\r\n    if (intersectedPolygons.length <= 0) {\r\n      alert(\"This couldn't be done.. (Length of intersect returned null)\");\r\n      return;\r\n    }\r\n\r\n    let polygon;\r\n    if (intersectedPolygons.length === 1) {\r\n      if (intersectedPolygons[0].length === 1) {\r\n        polygon = turf.polygon(intersectedPolygons[0]);\r\n      } else {\r\n        polygon = turf.multiPolygon(intersectedPolygons[0]);\r\n      }\r\n    } else {\r\n      polygon = turf.multiPolygon(intersectedPolygons);\r\n    }\r\n    let newID = `${layer1.id}_${layer2.id}_ISCT`;\r\n\r\n    if (layersCopy.findIndex((layer) => newID === layer.id) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n\r\n    const IntersectedLayer = createPolygonLayer(polygon, newID, true);\r\n\r\n    layersCopy.unshift(IntersectedLayer);\r\n    setTotalLayerSet(layersCopy);\r\n\r\n    /*let intersectedData = turf.intersect(layer1Copy.source.data, layer2Copy.source.data);\r\n\r\n    layer1Copy.source.data = intersectedData;\r\n\r\n    // Change id of the new layer\r\n    layer1Copy.id = layer1Copy.id + `_${layer2Copy.id}_intersect`;\r\n    layer1Copy.layout.visibility = \"visible\";\r\n    if (layersCopy.findIndex((layer) => layer.id === layer1Copy.id) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n    layersCopy.unshift(layer1Copy);\r\n    setTotalLayerSet(layersCopy);*/\r\n  };\r\n\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"I N T E R S E C T\"}\r\n          helpTip={\"Takes two polygons and returns their intersection (the area they have in common).\"}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId}\r\n          setChosenLayerId={setChosenLayerId}\r\n          layers={polygonLayers}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId2}\r\n          setChosenLayerId={setChosenLayerId2}\r\n          layers={polygonLayers}\r\n        />\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performIntersect(\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId),\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId2)\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intersect;\r\n","import React, { useState } from \"react\";\r\nimport * as turf from \"@turf/turf\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\nimport { createPolygonLayer } from \"../../../datasets/layers\";\r\n\r\nconst Union = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const polygonLayers = layersCopy.filter((layer) => {\r\n    //console.log(layer);\r\n\r\n    return (\r\n      layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n    );\r\n  });\r\n  const [chosenLayerId, setChosenLayerId] = useState(polygonLayers[0].id);\r\n  const [chosenLayerId2, setChosenLayerId2] = useState(polygonLayers[0].id);\r\n\r\n  const performUnion = (layer1, layer2) => {\r\n    if (layer1.id === layer2.id) {\r\n      alert(\"You need to choose two different layers, in order to perform Union\");\r\n      return;\r\n    }\r\n    let unionData = turf.union(layer1.source.data, layer2.source.data);\r\n    // Change id of the new layer\r\n    let newID = `${layer1.id}_${layer2.id}_UNI`;\r\n\r\n    if (layersCopy.findIndex((layer) => layer.id === newID) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n\r\n    let unionPolygon = createPolygonLayer(unionData, newID, true);\r\n\r\n    layersCopy.unshift(unionPolygon);\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"U N I O N\"}\r\n          helpTip={\"Takes two polygons and returns a combined polygon.\"}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId}\r\n          setChosenLayerId={setChosenLayerId}\r\n          layers={polygonLayers}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId2}\r\n          setChosenLayerId={setChosenLayerId2}\r\n          layers={polygonLayers}\r\n        />\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performUnion(\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId),\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId2)\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Union;\r\n","import React from \"react\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport Buffer from \"./SpatialOperations/Buffer\";\r\nimport Difference from \"./SpatialOperations/Difference\";\r\nimport Intersect from \"./SpatialOperations/Intersect\";\r\nimport Union from \"./SpatialOperations/Union\";\r\n\r\nconst OperationList = ({ totalLayerSet, setTotalLayerSet }) => {\r\n  let layersCopy = [];\r\n  totalLayerSet.forEach((element) => {\r\n    layersCopy.push(element);\r\n  });\r\n\r\n  return (\r\n    <div className=\"LayerContainer\">\r\n      <h3 style={{ color: Colors.textMain }}>Spatial Operations</h3>\r\n      <Buffer layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n      <Intersect layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n      <Union layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n      <Difference layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OperationList;\r\n","import React from \"react\";\r\nimport LayerList from \"./LayerList\";\r\nimport \"./SideBar.css\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport OperationList from \"./OperationList\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst SideBar = ({ totalLayerSet, setTotalLayerSet, setSideBarOpen, setDeletedLayerId }) => {\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    let newList = totalLayerSet.slice();\r\n    const polygonLayers = newList.filter((layer) => {\r\n      return (\r\n        layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n      );\r\n    });\r\n    let sourceIdx = parseInt(result.source.index);\r\n\r\n    if (result.destination.droppableId === \"delete\") {\r\n      if (newList.length < 3) {\r\n        alert(\"Please do not delete any more layers.\");\r\n        return;\r\n      } else if (polygonLayers.length <= 2 && totalLayerSet[sourceIdx].type === \"fill\") {\r\n        alert(\r\n          \"You can't delete another polygon layer. \\n\\nIn order to perform buffer, intersect or difference, you need at least 2 polygon layers in your collection.\"\r\n        );\r\n        return;\r\n      }\r\n      newList.splice(sourceIdx, 1);\r\n      setDeletedLayerId(totalLayerSet[sourceIdx].id);\r\n      setTotalLayerSet(newList);\r\n    } else {\r\n      let destIdx = parseInt(result.destination.index);\r\n      let draggedLink = totalLayerSet[sourceIdx];\r\n      newList.splice(sourceIdx, 1);\r\n      newList.splice(destIdx, 0, draggedLink);\r\n      setTotalLayerSet(newList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SideBar\">\r\n      <button\r\n        style={{ backgroundColor: Colors.secondary, color: Colors.text }}\r\n        className=\"CloseSideBar\"\r\n        onClick={() => {\r\n          setSideBarOpen(false);\r\n        }}\r\n      >\r\n        &#10007;\r\n      </button>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <LayerList totalLayerSet={totalLayerSet} setTotalLayerSet={setTotalLayerSet} />\r\n        <OperationList totalLayerSet={totalLayerSet} setTotalLayerSet={setTotalLayerSet} />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useState } from \"react\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport \"./Mission.css\";\r\n\r\nconst ModalContent = (props) => {\r\n  const { setShowMission, setAcceptedMission, acceptedMission, title } = props;\r\n  const [reply, setReply] = useState(\"\");\r\n  const [correct, setCorrect] = useState(false);\r\n\r\n  const checkAnswer = (reply) => {\r\n    if (reply.toLowerCase() === \"Gløshaugen\".toLowerCase()) {\r\n      alert(\"Well Done\");\r\n    } else {\r\n      alert(\"This is not correct.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ModalContent\">\r\n      <h1>{title}</h1>\r\n\r\n      {!acceptedMission && (\r\n        <div className=\"TextContainer\">\r\n          <p>There you are... Finally. </p>\r\n          <p>Your mission, should you choose to accept. </p>\r\n        </div>\r\n      )}\r\n\r\n      {acceptedMission && (\r\n        <div className=\"TextContainer\" style={{ fontSize: \"15px\" }}>\r\n          <p>Ethan Hunt has gotten himself caught by the enemy</p>\r\n          <ul>\r\n            <li>I can see a church. It is at most 100 metres away from me</li>\r\n            <li>\r\n              I can hear cars driving around, so I know the highway must be in close proximity. At most 50\r\n              metres\r\n            </li>\r\n            <li>\r\n              I can hear either a tram or a train, but I can't tell which. It is at most 50 metres away from\r\n              me.\r\n            </li>\r\n          </ul>\r\n          <p>We need your GIS expertise in order to save him.</p>\r\n          <p>\r\n            As always, should you be caught or killed, the Secretary will disavow any knowledge of your\r\n            actions. Good luck, Agent.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {!acceptedMission && (\r\n        <div className=\"ButtonContainer\">\r\n          <button\r\n            onClick={() => {\r\n              setShowMission(false);\r\n            }}\r\n          >\r\n            Explore on my own\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setAcceptedMission(true);\r\n            }}\r\n          >\r\n            I ACCEPT\r\n          </button>\r\n        </div>\r\n      )}\r\n      {acceptedMission && (\r\n        <div className=\"InputContainer\">\r\n          <input placeholder=\"location\" value={reply} onChange={(event) => setReply(event.target.value)} />\r\n          <button\r\n            onClick={() => {\r\n              checkAnswer(reply);\r\n            }}\r\n          >\r\n            CONFIRM\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalContent;\r\n","import React, { useState } from \"react\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Mission.css\";\r\nimport ModalContent from \"./ModalContent\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst Mission = (props) => {\r\n  const { showMission, setShowMission } = props;\r\n  const [acceptedMission, setAcceptedMission] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{ backgroundColor: Colors.secondary, color: Colors.text }}\r\n        className=\"ShowMission\"\r\n        onClick={() => {\r\n          setShowMission(true);\r\n        }}\r\n      >\r\n        &#9873;\r\n      </button>\r\n      <Modal isOpen={showMission} onRequestClose={() => setShowMission(false)} style={customStyles}>\r\n        {!acceptedMission && (\r\n          <ModalContent\r\n            setShowMission={setShowMission}\r\n            setAcceptedMission={setAcceptedMission}\r\n            acceptedMission={acceptedMission}\r\n            title={\"M I S S I O N\"}\r\n          />\r\n        )}\r\n        {acceptedMission && (\r\n          <ModalContent\r\n            setShowMission={setShowMission}\r\n            setAcceptedMission={setAcceptedMission}\r\n            acceptedMission={acceptedMission}\r\n            title={\"TOP SECRET\"}\r\n          />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    height: \"60%\",\r\n    width: \"50%\",\r\n    backgroundColor: `${Colors.secondary}`,\r\n    color: `${Colors.text}`,\r\n    boxShadow: \"0 6.5vw 2vw -5vw rgba(0, 0, 0, 0.5)\",\r\n  },\r\n};\r\n\r\nexport default Mission;\r\n","import React, { useState } from \"react\";\r\nimport \"./MainWrapper.css\";\r\nimport Map from \"../Map/Map\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport allLayers from \"../../datasets/layers\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport Mission from \"../Mission/Mission\";\r\n\r\nfunction MainWrapper() {\r\n  const [totalLayerSet, setTotalLayerSet] = useState(allLayers);\r\n  const [sideBarOpen, setSideBarOpen] = useState(true);\r\n  const [deletedLayerId, setDeletedLayerId] = useState(\"\");\r\n  const [showMission, setShowMission] = useState(false);\r\n  //const [mapStyle, setMapStyle] = useState(\"dark-v10\");\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Mission showMission={showMission} setShowMission={setShowMission} />\r\n      {!sideBarOpen && !showMission && (\r\n        <button\r\n          style={{ backgroundColor: Colors.secondary, color: Colors.text, fontSize: \"32px\" }}\r\n          className=\"ToggleSideBar\"\r\n          onClick={() => {\r\n            setSideBarOpen(true);\r\n          }}\r\n        >\r\n          &#x2630;\r\n        </button>\r\n      )}\r\n      {sideBarOpen && !showMission && (\r\n        <div className=\"sideBarContainer\" style={{ backgroundColor: Colors.primary }}>\r\n          <SideBar\r\n            totalLayerSet={totalLayerSet}\r\n            setTotalLayerSet={setTotalLayerSet}\r\n            setSideBarOpen={setSideBarOpen}\r\n            sideBarOpen={sideBarOpen}\r\n            setDeletedLayerId={setDeletedLayerId}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"mapContainer\">\r\n        <Map\r\n          allLayers={totalLayerSet}\r\n          deletedLayerId={deletedLayerId}\r\n          setDeletedLayerId={setDeletedLayerId}\r\n          // mapStyle={mapStyle}\r\n        />\r\n      </div>\r\n\r\n      {/*\r\n      <div className=\"LayerShift\">\r\n        <div style={LabelStyle}>Change Map Style</div>\r\n        <select\r\n          name=\"mapStyle\"\r\n          style={LayerSelect}\r\n          onChange={(event) => {\r\n            setMapStyle(event.target.value);\r\n          }}\r\n          value={mapStyle}\r\n        >\r\n          <option value=\"streets-v11\">Streets</option>\r\n          <option value=\"light-v10\">Light</option>\r\n          <option value=\"dark-v10\">Dark</option>\r\n          <option value=\"outdoors-v11\">Outdoors</option>\r\n          <option value=\"satellite-v9\">Satellite</option>\r\n        </select>\r\n      </div>\r\n       */}\r\n    </div>\r\n  );\r\n}\r\n/*\r\nconst LayerSelect = {\r\n  borderRadius: \"5px\",\r\n  marginTop: \"2px\",\r\n  marginBottom: \"2px\",\r\n  width: \"100px\",\r\n};\r\n\r\nconst LabelStyle = {\r\n  fontSize: \"12px\",\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  color: \"white\",\r\n};*/\r\n\r\nexport default MainWrapper;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainWrapper from \"./components/MainWrapper/MainWrapper\";\n\nfunction App() {\n  return <MainWrapper />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}