{"version":3,"sources":["components/Map/Map.js","constants/Colors.js","components/SideBar/LayerList.js","components/SideBar/SpatialOperations/minorComponents/OperationHeader.js","components/SideBar/SpatialOperations/minorComponents/LayerSelect.js","components/SideBar/SpatialOperations/minorComponents/OperationButton.js","components/SideBar/SpatialOperations/Buffer.js","components/SideBar/SpatialOperations/Difference.js","components/SideBar/SpatialOperations/Intersect.js","components/SideBar/SpatialOperations/Union.js","components/SideBar/OperationList.js","components/SideBar/SideBar.js","datasets/layers.js","datasets/geoJSON.js","components/Mission.js","components/MainWrapper/MainWrapper.js","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","accessToken","Map","props","mapContainer","useRef","useState","map","setMap","allLayers","deletedLayerId","setDeletedLayerId","useEffect","current","container","style","center","zoom","attributionControl","on","forEach","layer","addLayer","resize","nav","NavigationControl","addControl","attachMap","lastLayer","index","removeLayer","undefined","getLayer","id","setLayoutProperty","layout","visibility","moveLayer","className","ref","StyledContainer","styled","div","isDragging","draggingOver","Colors","LayerList","totalLayerSet","setTotalLayerSet","layersCopy","element","push","Item","setVisibility","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","width","wordWrap","borderRadius","backgroundColor","color","onClick","toggleVisibility","droppableId","droppableProps","key","placeholder","borderColor","OperationHeader","operation","helpTip","fontSize","margin","fontWeight","LayerSelect","chosenLayerId","setChosenLayerId","layers","onChange","event","target","value","OperationButton","operationHandler","Buffer","radius","setRadius","type","min","max","step","bufferedLayer","JSON","parse","stringify","source","data","turf","units","findIndex","unshift","alert","performBuffer","find","Difference","polygonLayers","filter","geometry","chosenLayerId2","setChosenLayerId2","layer1","layer2","layer1Copy","layer2Copy","performDifference","Intersect","performIntersect","Union","performUnion","OperationList","SideBar","setSideBarOpen","onDragEnd","result","destination","newList","slice","sourceIdx","parseInt","length","splice","destIdx","draggedLink","coordinates","properties","paint","Mission","setShowMission","MainWrapper","sideBarOpen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8cea4497.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./Map.css\";\r\n// import { gloshaugen } from \"../../datasets/geoJSON\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoibGFyc2lib3kiLCJhIjoiY2s2amd6MmVvMDRxeDNubW40bGwwenNpbCJ9.i9ENV59BhjJShYuUBgoj0g\";\r\n\r\nconst Map = (props) => {\r\n  const mapContainer = useRef(null);\r\n  let [map, setMap] = useState(null);\r\n  let { allLayers, deletedLayerId, setDeletedLayerId } = props;\r\n\r\n  useEffect(() => {\r\n    const attachMap = (setMap, mapContainer) => {\r\n      if (!mapContainer.current) {\r\n        return;\r\n      }\r\n      const map = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: \"mapbox://styles/mapbox/dark-v10\",\r\n        center: [10.406, 63.418],\r\n        zoom: 14,\r\n        attributionControl: false,\r\n      });\r\n\r\n      map.on(\"load\", () => {\r\n        // Add layers to map after map has loaded\r\n        allLayers.forEach((layer) => {\r\n          map.addLayer(layer);\r\n        });\r\n        setMap(map);\r\n        map.resize();\r\n      });\r\n\r\n      // Add zoom control\r\n      var nav = new mapboxgl.NavigationControl();\r\n      map.addControl(nav, \"bottom-right\");\r\n    };\r\n    !map && attachMap(setMap, mapContainer);\r\n  }, [map, allLayers]);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      let lastLayer;\r\n      let index = 0;\r\n      // Removes the chosen layer\r\n      if (deletedLayerId !== \"\") {\r\n        map.removeLayer(deletedLayerId);\r\n        setDeletedLayerId(\"\");\r\n        return;\r\n      }\r\n      allLayers.forEach((layer) => {\r\n        // Adds layer to the map if not already included\r\n        if (map.getLayer(layer.id) === undefined) {\r\n          map.addLayer(layer);\r\n        }\r\n        // Updates visibility of each layer\r\n        map.setLayoutProperty(layer.id, \"visibility\", layer.layout.visibility);\r\n\r\n        // Rearranges the layers\r\n        if (index === 0) {\r\n          lastLayer = layer;\r\n        } else {\r\n          map.moveLayer(layer.id, lastLayer.id);\r\n          lastLayer = layer;\r\n        }\r\n        index++;\r\n      });\r\n    }\r\n  }, [map, allLayers, deletedLayerId, setDeletedLayerId]);\r\n\r\n  return <div className=\"map\" ref={mapContainer} />;\r\n};\r\n\r\nexport default Map;\r\n","export default {\r\n  secondary: \"#281028\",\r\n  primary: \"#6897bb\",\r\n  text: \"white\",\r\n  button: \"grey\",\r\n  delete: \"#8b0000\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./SideBar.css\";\r\nimport styled from \"styled-components\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst LayerList = (props) => {\r\n  const { totalLayerSet, setTotalLayerSet } = props;\r\n\r\n  let layersCopy = [];\r\n  totalLayerSet.forEach((element) => {\r\n    layersCopy.push(element);\r\n  });\r\n\r\n  const toggleVisibility = (layer) => {\r\n    if (layer.layout.visibility === \"none\") {\r\n      layer.layout.visibility = \"visible\";\r\n    } else {\r\n      layer.layout.visibility = \"none\";\r\n    }\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n\r\n  const Item = ({ index, layer }) => {\r\n    const [visibility, setVisibility] = useState(layer.layout.visibility);\r\n    return (\r\n      <Draggable draggableId={`${index}`} index={index}>\r\n        {(provided, snapshot) => (\r\n          <StyledContainer\r\n            className=\"Layer\"\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            draggingOver={snapshot.draggingOver === \"delete\"}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <div style={{ width: \"65%\", wordWrap: \"break-word\" }}>{layer.id}</div>\r\n            <button\r\n              className=\"LayerButton\"\r\n              style={{\r\n                width: \"50px\",\r\n                borderRadius: \"5px\",\r\n                backgroundColor: Colors.button,\r\n                color: Colors.text,\r\n              }}\r\n              onClick={() => {\r\n                setVisibility(visibility === \"visible\" ? \"none\" : \"visible\");\r\n                toggleVisibility(layer);\r\n              }}\r\n            >\r\n              {visibility === \"visible\" ? \"hide\" : \"show\"}\r\n            </button>\r\n          </StyledContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"LayerContainer\">\r\n      <h3>Layers</h3>\r\n      <Droppable droppableId={\"0\"}>\r\n        {(provided) => (\r\n          <div ref={provided.innerRef} {...provided.droppableProps}>\r\n            {layersCopy.map((layer, index) => (\r\n              <Item layer={layer} key={layer.id} index={index} />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n      <Droppable droppableId={\"delete\"}>\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            style={{ color: Colors.delete, borderColor: Colors.delete }}\r\n            className=\"DeleteLayer\"\r\n          >\r\n            D E L E T E{provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  font-size: 14px;\r\n  margin-top: 4px;\r\n  opacity: ${(props) => (props.isDragging ? 0.6 : 1)};\r\n  background-color: ${(props) => (props.draggingOver ? Colors.delete : Colors.secondary)};\r\n  border: ${(props) =>\r\n    props.isDragging ? \"1px solid rgba(0, 0, 0, 0.6);\" : \"1px solid rgba(0, 0, 0, 0.3);\"};\r\n  box-shadow: ${(props) =>\r\n    props.isDragging ? \"0px 10px 20px rgba(0, 0, 0, 0.49);\" : \"-2px 3px 3px rgba(0, 0, 0, 0.43);\"};\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: ${Colors.text};\r\n`;\r\n\r\nexport default LayerList;\r\n","import React from \"react\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst OperationHeader = (props) => {\r\n  let { operation, helpTip } = props;\r\n  return (\r\n    <div className=\"OperationHeader\">\r\n      <p style={{ fontSize: \"12px\", margin: \"0\", fontWeight: \"bold\" }}>{operation}</p>\r\n      <div className=\"HelpTip\" style={{ backgroundColor: Colors.primary }}>\r\n        <p>{helpTip}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OperationHeader;\r\n","import React from \"react\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst LayerSelect = (props) => {\r\n  let { chosenLayerId, setChosenLayerId, layers } = props;\r\n  return (\r\n    <select\r\n      className=\"LayerSelect\"\r\n      style={{ color: Colors.secondary }}\r\n      onChange={(event) => setChosenLayerId(event.target.value)}\r\n      value={chosenLayerId}\r\n    >\r\n      {layers.map((layer) => (\r\n        <option value={layer.id} key={layer.id}>\r\n          {layer.id}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default LayerSelect;\r\n","import React from \"react\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst OperationButton = (props) => {\r\n  return (\r\n    <button\r\n      className=\"OperationButton\"\r\n      style={{ backgroundColor: Colors.button, color: Colors.text, borderRadius: \"5px\" }}\r\n      onClick={() => props.operationHandler()}\r\n    >\r\n      Go\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OperationButton;\r\n","import React, { useState } from \"react\";\r\nimport * as turf from \"@turf/turf\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\n\r\nconst Buffer = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const [radius, setRadius] = useState(5);\r\n  const [chosenLayerId, setChosenLayerId] = useState(layersCopy[0].id);\r\n\r\n  const performBuffer = (layer, radius) => {\r\n    let bufferedLayer = JSON.parse(JSON.stringify(layer));\r\n    bufferedLayer.source.data = turf.buffer(layer.source.data, radius, { units: \"metres\" });\r\n    // Change id of the new layer\r\n    bufferedLayer.id = bufferedLayer.id + `_${radius}m`;\r\n    bufferedLayer.layout.visibility = \"visible\";\r\n    if (layersCopy.findIndex((layer) => layer.id === bufferedLayer.id) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    } else {\r\n      layersCopy.unshift(bufferedLayer);\r\n      setTotalLayerSet(layersCopy);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"B U F F E R\"}\r\n          helpTip={\"Creates a buffer around a layer for a given radius.\"}\r\n        />\r\n        <LayerSelect chosenLayerId={chosenLayerId} setChosenLayerId={setChosenLayerId} layers={layersCopy} />\r\n\r\n        <label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"number\"\r\n            id=\"quantity\"\r\n            min=\"5\"\r\n            max=\"500\"\r\n            step=\"5\"\r\n            value={radius}\r\n            onChange={(event) => setRadius(event.target.value)}\r\n          />\r\n          metres\r\n        </label>\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performBuffer(\r\n            layersCopy.find((layer) => layer.id === chosenLayerId),\r\n            radius\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buffer;\r\n","import React, { useState } from \"react\";\r\nimport * as turf from \"@turf/turf\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\n\r\nconst Difference = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const polygonLayers = layersCopy.filter(\r\n    (layer) =>\r\n      layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n  );\r\n  const [chosenLayerId, setChosenLayerId] = useState(polygonLayers[0].id);\r\n  const [chosenLayerId2, setChosenLayerId2] = useState(polygonLayers[0].id);\r\n\r\n  const performDifference = (layer1, layer2) => {\r\n    if (layer1.id === layer2.id) {\r\n      alert(\"You need to choose two different layers, in order to perform Difference\");\r\n      return;\r\n    }\r\n    let layer1Copy = JSON.parse(JSON.stringify(layer1));\r\n    let layer2Copy = JSON.parse(JSON.stringify(layer2));\r\n    layer1Copy.source.data = turf.difference(layer1Copy.source.data, layer2Copy.source.data);\r\n    // Change id of the new layer\r\n    layer1Copy.id = layer1Copy.id + `_${layer2Copy.id}_Difference`;\r\n    layer1Copy.layout.visibility = \"visible\";\r\n    if (layersCopy.findIndex((layer) => layer.id === layer1Copy.id) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n    layersCopy.unshift(layer1Copy);\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"D I F F E R E N C E\"}\r\n          helpTip={\"Finds the difference between two polygons by clipping the second polygon from the first.\"}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId}\r\n          setChosenLayerId={setChosenLayerId}\r\n          layers={polygonLayers}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId2}\r\n          setChosenLayerId={setChosenLayerId2}\r\n          layers={polygonLayers}\r\n        />\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performDifference(\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId),\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId2)\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Difference;\r\n","import React, { useState } from \"react\";\r\nimport * as turf from \"@turf/turf\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\n\r\nconst Intersect = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const polygonLayers = layersCopy.filter(\r\n    (layer) =>\r\n      layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n  );\r\n  const [chosenLayerId, setChosenLayerId] = useState(polygonLayers[0].id);\r\n  const [chosenLayerId2, setChosenLayerId2] = useState(polygonLayers[0].id);\r\n\r\n  const performIntersect = (layer1, layer2) => {\r\n    if (layer1.id === layer2.id) {\r\n      alert(\"You need to choose two different layers, in order to perform Intersect\");\r\n      return;\r\n    }\r\n    let layer1Copy = JSON.parse(JSON.stringify(layer1));\r\n    let layer2Copy = JSON.parse(JSON.stringify(layer2));\r\n    layer1Copy.source.data = turf.intersect(layer1Copy.source.data, layer2Copy.source.data);\r\n    // Change id of the new layer\r\n    layer1Copy.id = layer1Copy.id + `_${layer2Copy.id}_intersect`;\r\n    layer1Copy.layout.visibility = \"visible\";\r\n    if (layersCopy.findIndex((layer) => layer.id === layer1Copy.id) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n    layersCopy.unshift(layer1Copy);\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"I N T E R S E C T\"}\r\n          helpTip={\"Takes two polygons and returns their intersection (the area they have in common).\"}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId}\r\n          setChosenLayerId={setChosenLayerId}\r\n          layers={polygonLayers}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId2}\r\n          setChosenLayerId={setChosenLayerId2}\r\n          layers={polygonLayers}\r\n        />\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performIntersect(\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId),\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId2)\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intersect;\r\n","import React, { useState } from \"react\";\r\nimport * as turf from \"@turf/turf\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport OperationHeader from \"./minorComponents/OperationHeader\";\r\nimport LayerSelect from \"./minorComponents/LayerSelect\";\r\nimport OperationButton from \"./minorComponents/OperationButton\";\r\n\r\nconst Union = (props) => {\r\n  const { setTotalLayerSet, layersCopy } = props;\r\n  const polygonLayers = layersCopy.filter(\r\n    (layer) =>\r\n      layer.source.data.geometry.type === \"Polygon\" || layer.source.data.geometry.type === \"MultiPolygon\"\r\n  );\r\n  const [chosenLayerId, setChosenLayerId] = useState(polygonLayers[0].id);\r\n  const [chosenLayerId2, setChosenLayerId2] = useState(polygonLayers[0].id);\r\n\r\n  const performUnion = (layer1, layer2) => {\r\n    if (layer1.id === layer2.id) {\r\n      alert(\"You need to choose two different layers, in order to perform Union\");\r\n      return;\r\n    }\r\n    let layer1Copy = JSON.parse(JSON.stringify(layer1));\r\n    let layer2Copy = JSON.parse(JSON.stringify(layer2));\r\n    layer1Copy.source.data = turf.union(layer1Copy.source.data, layer2Copy.source.data);\r\n    // Change id of the new layer\r\n    layer1Copy.id = layer1Copy.id + `_${layer2Copy.id}_union`;\r\n    layer1Copy.layout.visibility = \"visible\";\r\n    if (layersCopy.findIndex((layer) => layer.id === layer1Copy.id) !== -1) {\r\n      alert(\"You have allready created this layer\");\r\n      return;\r\n    }\r\n    layersCopy.unshift(layer1Copy);\r\n    setTotalLayerSet(layersCopy);\r\n  };\r\n  return (\r\n    <div className=\"OperationContainer\" style={{ backgroundColor: Colors.secondary, color: Colors.text }}>\r\n      <div className=\"OperationSettings\">\r\n        <OperationHeader\r\n          operation={\"U N I O N\"}\r\n          helpTip={\"Takes two polygons and returns a combined polygon.\"}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId}\r\n          setChosenLayerId={setChosenLayerId}\r\n          layers={polygonLayers}\r\n        />\r\n        <LayerSelect\r\n          chosenLayerId={chosenLayerId2}\r\n          setChosenLayerId={setChosenLayerId2}\r\n          layers={polygonLayers}\r\n        />\r\n      </div>\r\n      <OperationButton\r\n        operationHandler={() =>\r\n          performUnion(\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId),\r\n            polygonLayers.find((layer) => layer.id === chosenLayerId2)\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Union;\r\n","import React from \"react\";\r\nimport Buffer from \"./SpatialOperations/Buffer\";\r\nimport Difference from \"./SpatialOperations/Difference\";\r\nimport Intersect from \"./SpatialOperations/Intersect\";\r\nimport Union from \"./SpatialOperations/Union\";\r\n\r\nconst OperationList = ({ totalLayerSet, setTotalLayerSet }) => {\r\n  let layersCopy = [];\r\n  totalLayerSet.forEach((element) => {\r\n    layersCopy.push(element);\r\n  });\r\n\r\n  return (\r\n    <div className=\"LayerContainer\">\r\n      <h3>Spatial Operations</h3>\r\n      <Buffer layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n      <Intersect layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n      <Union layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n      <Difference layersCopy={layersCopy} setTotalLayerSet={setTotalLayerSet} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OperationList;\r\n","import React from \"react\";\r\nimport LayerList from \"./LayerList\";\r\nimport \"./SideBar.css\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport OperationList from \"./OperationList\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst SideBar = ({ totalLayerSet, setTotalLayerSet, setSideBarOpen, setDeletedLayerId }) => {\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    let newList = totalLayerSet.slice();\r\n    let sourceIdx = parseInt(result.source.index);\r\n\r\n    if (result.destination.droppableId === \"delete\") {\r\n      if (newList.length < 3) {\r\n        alert(\"Please do not delete any more layers.\");\r\n        return;\r\n      }\r\n      newList.splice(sourceIdx, 1);\r\n      setDeletedLayerId(totalLayerSet[sourceIdx].id);\r\n      setTotalLayerSet(newList);\r\n    } else {\r\n      let destIdx = parseInt(result.destination.index);\r\n      let draggedLink = totalLayerSet[sourceIdx];\r\n      newList.splice(sourceIdx, 1);\r\n      newList.splice(destIdx, 0, draggedLink);\r\n      setTotalLayerSet(newList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SideBar\">\r\n      <button\r\n        style={{ backgroundColor: Colors.secondary, color: Colors.text }}\r\n        className=\"CloseSideBar\"\r\n        onClick={() => {\r\n          setSideBarOpen(false);\r\n        }}\r\n      >\r\n        &#10007;\r\n      </button>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <LayerList totalLayerSet={totalLayerSet} setTotalLayerSet={setTotalLayerSet} />\r\n        <OperationList totalLayerSet={totalLayerSet} setTotalLayerSet={setTotalLayerSet} />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import {\r\n  gloshaugen,\r\n  campusrunden,\r\n  kantiner,\r\n  hoyskoleparken,\r\n  frimerket,\r\n  parkering,\r\n  bysykkelstativ,\r\n  lilleCampusrunden,\r\n} from \"./geoJSON.js\";\r\n\r\nconst layer_gloshaugen = {\r\n  id: \"Gløshaugen\",\r\n  type: \"fill\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: gloshaugen,\r\n  },\r\n  paint: {\r\n    \"fill-color\": \"#bf0933\",\r\n    \"fill-opacity\": 0.8,\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\nconst layer_hoyskoleparken = {\r\n  id: \"Høyskoleparken\",\r\n  type: \"fill\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: hoyskoleparken,\r\n  },\r\n  paint: {\r\n    \"fill-color\": \"#1053bc\",\r\n    \"fill-opacity\": 0.8,\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst layer_frimerket = {\r\n  id: \"Frimerket\",\r\n  type: \"fill\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: frimerket,\r\n  },\r\n  paint: {\r\n    \"fill-color\": \"#0ba83f\",\r\n    \"fill-opacity\": 0.4,\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst layer_campusrunden = {\r\n  id: \"Campusrunden\",\r\n  type: \"line\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: campusrunden,\r\n  },\r\n  paint: {\r\n    \"line-color\": \"#ff69b4\",\r\n    \"line-width\": 1,\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst layer_lille_campusrunden = {\r\n  id: \"Lille Campusrunden\",\r\n  type: \"line\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: lilleCampusrunden,\r\n  },\r\n  paint: {\r\n    \"line-color\": \"#4b5acc\",\r\n    \"line-width\": 1,\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst layer_kantiner = {\r\n  id: \"Kantiner\",\r\n  type: \"circle\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: kantiner,\r\n  },\r\n  paint: {\r\n    \"circle-color\": \"#4b5acc\",\r\n    \"circle-radius\": 5,\r\n    \"circle-stroke-width\": 1,\r\n    \"circle-stroke-color\": \"#fff\",\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst layer_parkering = {\r\n  id: \"Parkeringsplasser\",\r\n  type: \"circle\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: parkering,\r\n  },\r\n  paint: {\r\n    \"circle-color\": \"#3eb975\",\r\n    \"circle-radius\": 5,\r\n    \"circle-stroke-width\": 1,\r\n    \"circle-stroke-color\": \"#fff\",\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst layer_bysykkelstativ = {\r\n  id: \"Bysykkelstativ\",\r\n  type: \"circle\",\r\n  source: {\r\n    type: \"geojson\",\r\n    data: bysykkelstativ,\r\n  },\r\n  paint: {\r\n    \"circle-color\": \"#e23f04\",\r\n    \"circle-radius\": 5,\r\n    \"circle-stroke-width\": 1,\r\n    \"circle-stroke-color\": \"#fff\",\r\n  },\r\n  layout: {\r\n    visibility: \"none\",\r\n  },\r\n};\r\n\r\nconst allLayers = [\r\n  layer_gloshaugen,\r\n  layer_campusrunden,\r\n  layer_kantiner,\r\n  layer_hoyskoleparken,\r\n  layer_frimerket,\r\n  layer_parkering,\r\n  layer_bysykkelstativ,\r\n  layer_lille_campusrunden,\r\n];\r\n\r\nexport default allLayers;\r\n","export const gloshaugen = {\r\n  geometry: {\r\n    coordinates: [\r\n      [\r\n        [10.401351609034037, 63.42002084745741],\r\n        [10.400427523901271, 63.419562258241626],\r\n        [10.398965789199622, 63.41923898602835],\r\n        [10.398814575269284, 63.41852476704713],\r\n        [10.399184209332333, 63.41815637345442],\r\n        [10.400679547110258, 63.41846462147521],\r\n        [10.40089796724294, 63.41813381859336],\r\n        [10.400545134730436, 63.41802856233127],\r\n        [10.401351609034037, 63.417269202123634],\r\n        [10.402762939083914, 63.41632185327177],\r\n        [10.403233382425555, 63.4158030537327],\r\n        [10.403905444349391, 63.41560004265932],\r\n        [10.404359086140488, 63.41520153526773],\r\n        [10.405148758918273, 63.41535191606701],\r\n        [10.405770416190336, 63.41475038813752],\r\n        [10.406039240974764, 63.41432179178662],\r\n        [10.40598883632299, 63.41394582480257],\r\n        [10.40649288276586, 63.41369768389487],\r\n        [10.407450570999828, 63.413900708432095],\r\n        [10.406980127658102, 63.414163886252624],\r\n        [10.40824024377767, 63.41430675319967],\r\n        [10.409701978454422, 63.41450225418683],\r\n        [10.410441246555706, 63.414803022331824],\r\n        [10.411096506953726, 63.415043634578524],\r\n        [10.411298125510967, 63.415757940284436],\r\n        [10.411365331713313, 63.416239146726525],\r\n        [10.410340437277057, 63.41629929696742],\r\n        [10.410357238827658, 63.4167804943238],\r\n        [10.408878702600276, 63.41696845984805],\r\n        [10.408290648404545, 63.417569941244494],\r\n        [10.406980127658102, 63.417389498151664],\r\n        [10.40556879760831, 63.41875031180561],\r\n        [10.404543903171998, 63.41944197133037],\r\n        [10.403435001007693, 63.41999829406322],\r\n        [10.401351609034037, 63.42002084745741],\r\n      ],\r\n    ],\r\n    type: \"Polygon\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {\r\n    id: \"Gløshaugen\",\r\n  },\r\n};\r\n\r\nexport const campusrunden = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.398963379348913, 63.421828174887565],\r\n      [10.399432496365904, 63.42179669113128],\r\n      [10.399995436782831, 63.42140838863753],\r\n      [10.400863303271166, 63.42090463702175],\r\n      [10.401355876125109, 63.42041137165475],\r\n      [10.402481756976272, 63.42064226288278],\r\n      [10.404287857481222, 63.42063176786573],\r\n      [10.404616239406948, 63.4205687976943],\r\n      [10.403068153247489, 63.41999156465596],\r\n      [10.402763227176024, 63.41991809779594],\r\n      [10.402857050593326, 63.4197921541755],\r\n      [10.403396535155906, 63.419897107231634],\r\n      [10.404452048444085, 63.41933035616515],\r\n      [10.405132268115239, 63.41872161105519],\r\n      [10.405319914932448, 63.4187845852843],\r\n      [10.40459278355263, 63.41948778814131],\r\n      [10.404686606952595, 63.41987611665192],\r\n      [10.405202635678165, 63.42023295442834],\r\n      [10.405718664386455, 63.420096516982],\r\n      [10.405906311203665, 63.41986562135435],\r\n      [10.406492707474882, 63.41961373309897],\r\n      [10.407219838854672, 63.41940382452751],\r\n      [10.407876602671479, 63.41920440995861],\r\n      [10.407946970217125, 63.41903648082899],\r\n      [10.407571676617408, 63.418805576667125],\r\n      [10.407032192037462, 63.41855367909358],\r\n      [10.406914912783236, 63.41842772947871],\r\n      [10.406961824491873, 63.41820731631833],\r\n      [10.407430941508835, 63.41727316555122],\r\n      [10.407688955871635, 63.41679033411964],\r\n      [10.408134617034307, 63.41647543967579],\r\n      [10.408462998942753, 63.41642295693222],\r\n      [10.408462998942753, 63.41627600474075],\r\n      [10.40780623512589, 63.41625501150571],\r\n      [10.40759513245439, 63.4156776916042],\r\n      [10.408298807979833, 63.41549924491997],\r\n      [10.409213586176833, 63.41529980319456],\r\n      [10.40984689413935, 63.415068868932366],\r\n      [10.41003454095656, 63.41465948090334],\r\n      [10.40984689413935, 63.41422909231076],\r\n      [10.409166674468196, 63.41404013918057],\r\n      [10.40832226383418, 63.413945662150496],\r\n      [10.407126015437399, 63.413819692291526],\r\n      [10.406258148966401, 63.41373571207683],\r\n      [10.405812487803729, 63.41389317477618],\r\n      [10.405765576095092, 63.41415561068695],\r\n      [10.405601385132229, 63.41437605499735],\r\n      [10.405789031949439, 63.414774949915596],\r\n      [10.40553101758664, 63.41504787481736],\r\n      [10.405226091515175, 63.415341791040305],\r\n      [10.404522415989732, 63.41526831226798],\r\n      [10.403842196318578, 63.415436263470326],\r\n      [10.403443446864514, 63.415635704250406],\r\n      [10.403021241538852, 63.415877130704985],\r\n      [10.402411389413288, 63.416370474092616],\r\n      [10.401731169742192, 63.41649643274553],\r\n      [10.401308964433838, 63.41670636260534],\r\n      [10.400957126671102, 63.416989765480906],\r\n      [10.400699112308303, 63.41727316555122],\r\n      [10.400464553799765, 63.41759854736111],\r\n      [10.399831245819968, 63.41777698098372],\r\n      [10.398869555931668, 63.41791342946976],\r\n      [10.398353527223378, 63.41813384488958],\r\n      [10.39783749849775, 63.41843822530268],\r\n      [10.397767130952161, 63.41871111533496],\r\n      [10.398588085731888, 63.41885805504924],\r\n      [10.398494262331951, 63.41924639209023],\r\n      [10.399385584657267, 63.41935134714447],\r\n      [10.399385584657267, 63.41961373309897],\r\n      [10.399690510711395, 63.41996007888241],\r\n      [10.400206539436994, 63.42006503132376],\r\n      [10.399831245819968, 63.42055830265036],\r\n      [10.399385584657267, 63.42078919269491],\r\n      [10.39854117402325, 63.42088364717978],\r\n      [10.398962150672816, 63.42182411228569],\r\n    ],\r\n    type: \"LineString\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const kantiner = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.404468071331877, 63.41559939466791],\r\n      [10.404627746498193, 63.41683557641119],\r\n      [10.404180656037227, 63.41872190131292],\r\n      [10.401434243171735, 63.41811457540271],\r\n    ],\r\n    type: \"MultiPoint\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const hoyskoleparken = {\r\n  geometry: {\r\n    coordinates: [\r\n      [\r\n        [10.394903495790999, 63.422120509919665],\r\n        [10.395676745550787, 63.42068536969313],\r\n        [10.398282883605788, 63.420851952155914],\r\n        [10.39759555047658, 63.419262972326464],\r\n        [10.39759555047658, 63.41827622278413],\r\n        [10.398569272402597, 63.4170331263164],\r\n        [10.399886660850882, 63.41716128308343],\r\n        [10.400230327415528, 63.4167255477353],\r\n        [10.40100357717526, 63.415956586853326],\r\n        [10.401118132689788, 63.41521323839575],\r\n        [10.403208770897805, 63.415200421876904],\r\n        [10.404697992649602, 63.41496972350566],\r\n        [10.405499881272164, 63.41505943975815],\r\n        [10.405156214728692, 63.41535421975826],\r\n        [10.404039298404257, 63.41531577036409],\r\n        [10.402979659868862, 63.41590532206311],\r\n        [10.402807826586582, 63.41626417368377],\r\n        [10.401519077001069, 63.417327886020416],\r\n        [10.400860382776898, 63.41790458103651],\r\n        [10.401032216038033, 63.41810962535328],\r\n        [10.400631271726752, 63.41846844938482],\r\n        [10.399313883257292, 63.41816088620692],\r\n        [10.398769744547621, 63.41863504473051],\r\n        [10.399743466452492, 63.41896823251753],\r\n        [10.40083174389298, 63.41900667700895],\r\n        [10.40043079958167, 63.419532079945725],\r\n        [10.401146771573679, 63.42003184453105],\r\n        [10.401662271399431, 63.420147173585974],\r\n        [10.402578715557581, 63.42000621579075],\r\n        [10.404468881599485, 63.42049315795734],\r\n        [10.4031514931512, 63.42119792802103],\r\n        [10.399285244394576, 63.42206925614613],\r\n        [10.39862655014926, 63.4215438997104],\r\n        [10.39527580121839, 63.4221845770042],\r\n        [10.394903495790999, 63.422120509919665],\r\n      ],\r\n    ],\r\n    type: \"Polygon\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const frimerket = {\r\n  geometry: {\r\n    coordinates: [\r\n      [\r\n        [10.402029788879446, 63.41885141257001],\r\n        [10.402980932209687, 63.41903769836273],\r\n        [10.40351576042221, 63.41846659939702],\r\n        [10.402558539479855, 63.41828030989328],\r\n        [10.402029788879446, 63.41885141257001],\r\n      ],\r\n    ],\r\n    type: \"Polygon\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const parkering = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.402953565800516, 63.41591969472583],\r\n      [10.400289303478047, 63.4156084066216],\r\n      [10.405437331677462, 63.41727326781094],\r\n      [10.404722352851877, 63.417519574013994],\r\n      [10.405255749753422, 63.41778365254436],\r\n      [10.403230696792917, 63.41965747991665],\r\n    ],\r\n    type: \"MultiPoint\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const bysykkelstativ = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.414859769003101, 63.41354735618927],\r\n      [10.399547347348715, 63.415432954830806],\r\n      [10.3962684354197, 63.416220399780286],\r\n      [10.407032371491027, 63.416876831079406],\r\n      [10.403358146075476, 63.41953454309336],\r\n      [10.40060207002486, 63.41254253246521],\r\n      [10.39927985073274, 63.421963652040745],\r\n    ],\r\n    type: \"MultiPoint\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n\r\nexport const lilleCampusrunden = {\r\n  geometry: {\r\n    coordinates: [\r\n      [10.401418990042544, 63.419970015614894],\r\n      [10.400901009924183, 63.41975678746854],\r\n      [10.400693817876856, 63.41942303588149],\r\n      [10.401128921176252, 63.41892240122121],\r\n      [10.401750497318318, 63.41889458792784],\r\n      [10.40268286153136, 63.418162161497264],\r\n      [10.402537827098257, 63.41801381968713],\r\n      [10.404257521064778, 63.41640055295119],\r\n      [10.402972930397652, 63.41617802627556],\r\n      [10.403097245626043, 63.415918409643695],\r\n      [10.403594506513258, 63.41564951850495],\r\n      [10.40392601378906, 63.41544553044167],\r\n      [10.40431967867903, 63.415269357770455],\r\n      [10.405293481301527, 63.41530644684508],\r\n      [10.405687146191525, 63.41498191581553],\r\n      [10.405832180624657, 63.41451829369299],\r\n      [10.405915057443593, 63.41396193724361],\r\n      [10.406288003128822, 63.41371157332537],\r\n      [10.407137490496552, 63.41376720993597],\r\n      [10.40904365733212, 63.414008300693354],\r\n      [10.409789548702577, 63.414360660461654],\r\n      [10.409851706316772, 63.41479646786371],\r\n      [10.409188691765308, 63.41511172866814],\r\n      [10.407841943457498, 63.41538989708161],\r\n      [10.407427559362816, 63.41571442349348],\r\n      [10.407448278567529, 63.41609457833286],\r\n      [10.407627633457508, 63.41628668632953],\r\n      [10.40713557247119, 63.41680965585067],\r\n      [10.406951049616993, 63.416881219359425],\r\n      [10.406212958137587, 63.416963792416794],\r\n      [10.405868515447168, 63.41729408226456],\r\n      [10.405228836165008, 63.4179216224957],\r\n      [10.404539950799858, 63.41794914587575],\r\n      [10.403998683714889, 63.41843355303635],\r\n      [10.403617336450537, 63.41841703929052],\r\n      [10.40290669990435, 63.41900337594305],\r\n      [10.403382555433467, 63.41936717945157],\r\n      [10.402792036111123, 63.419867275003384],\r\n      [10.402595196342702, 63.41998072830296],\r\n      [10.401440847853706, 63.41997475708786],\r\n    ],\r\n    type: \"LineString\",\r\n  },\r\n  type: \"Feature\",\r\n  properties: {},\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst Mission = (props) => {\r\n  const [showMission, setShowMission] = useState(false);\r\n  return (\r\n    <button\r\n      style={{ backgroundColor: Colors.text, color: Colors.secondary }}\r\n      className=\"ShowMission\"\r\n      onClick={() => {\r\n        setShowMission(true);\r\n      }}\r\n    >\r\n      &#x2630;\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Mission;\r\n","import React, { useState } from \"react\";\r\nimport \"./MainWrapper.css\";\r\nimport Map from \"../Map/Map\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport allLayers from \"../../datasets/layers\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport Mission from \"../Mission\";\r\n\r\nfunction MainWrapper() {\r\n  const [totalLayerSet, setTotalLayerSet] = useState(allLayers);\r\n  const [sideBarOpen, setSideBarOpen] = useState(true);\r\n  const [deletedLayerId, setDeletedLayerId] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      {!sideBarOpen && (\r\n        <button\r\n          style={{ backgroundColor: Colors.text, color: Colors.secondary }}\r\n          className=\"ToggleSideBar\"\r\n          onClick={() => {\r\n            setSideBarOpen(true);\r\n          }}\r\n        >\r\n          &#x2630;\r\n        </button>\r\n      )}\r\n      {sideBarOpen && (\r\n        <div className=\"sideBarContainer\" style={{ backgroundColor: Colors.primary }}>\r\n          <SideBar\r\n            totalLayerSet={totalLayerSet}\r\n            setTotalLayerSet={setTotalLayerSet}\r\n            setSideBarOpen={setSideBarOpen}\r\n            sideBarOpen={sideBarOpen}\r\n            setDeletedLayerId={setDeletedLayerId}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"mapContainer\">\r\n        <Map\r\n          allLayers={totalLayerSet}\r\n          deletedLayerId={deletedLayerId}\r\n          setDeletedLayerId={setDeletedLayerId}\r\n        />\r\n      </div>\r\n      <Mission />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainWrapper;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainWrapper from \"./components/MainWrapper/MainWrapper\";\n\nfunction App() {\n  return <MainWrapper />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}